# -*- coding: utf-8 -*-
"""Terrorism Interactive Data.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1NJT6Nn17edgY6eXAjU0I7vSI2pzrdWHM
"""

# Commented out IPython magic to ensure Python compatibility.
import numpy as np
import pandas as pd
from bokeh.io import show, output_file
from bokeh.plotting import figure
import matplotlib.pyplot as plt
# %matplotlib inline

df_gtd = pd.read_csv("globalterrorismdb_0718dist.csv",encoding='ISO-8859-1') 
df_gtd.shape

df_gtd.head()

columns =df_gtd.columns
columns
names =[ x for x in columns]
print (names)

df_gtd.rename(columns={'iyear':'Year','imonth':'Month','iday':'Day','country_txt':'Country','region_txt':'Region','attacktype1_txt':'AttackType','target1':'Target','nkill':'Killed','nwound':'Wounded','summary':'Summary','gname':'Group','targtype1_txt':'Target_type','weaptype1_txt':'Weapon_type','motive':'Motive'},inplace=True)

#removing unnecessary columns and creating new column
df_gtd=df_gtd[['Year','Month','Day','Country','Region','city','latitude','longitude','AttackType','Killed','Wounded','Target','Summary','Group','Target_type','Weapon_type','Motive']]
df_gtd['casualities']=df_gtd['Killed']+df_gtd['Wounded']
df_gtd.head()

#df_death = df_gtd.groupby(by=["Country",'Region']).sum()
df_region_wise = df_gtd[['Region','Killed','Wounded','casualities']].copy()
df_region_wise = df_region_wise.groupby(by=['Region']).sum()
df_region_wise

from bokeh.models import NumeralTickFormatter
from bokeh.layouts import gridplot
from bokeh.models import ColumnDataSource
from math import pi
from bokeh.io import output_notebook
from bokeh.io import export_png
from bokeh.io import curdoc, output_notebook
from bokeh.models import HoverTool
#from bokeh.layouts import widgetbox, row, column
from bokeh.palettes import brewer
from bokeh.models import FixedTicker,NumeralTickFormatter

output_notebook()

def set_stype(figure,  xlabel="", ylabel=""):
    #figure.title = 
    figure.title.align ='center'
    
    figure.xaxis.axis_label=xlabel
    figure.yaxis.axis_label =ylabel
    figure.xaxis.axis_label_text_font="times"
    
    figure.yaxis.axis_label_text_font="times"
    figure.xaxis.axis_label_text_font_style ="bold"
    figure.yaxis.axis_label_text_font_style ="bold"
    
    figure.title.text_font = "times"
    figure.title.text_font_style = "bold"

source = ColumnDataSource(df_region_wise)
print(df_region_wise.columns)
options = dict(plot_width=450, plot_height=450,
               tools="pan,wheel_zoom,box_zoom,box_select,lasso_select")
#plot for death toll
p1 = figure(x_range= df_region_wise.index.tolist(), title="Death By Region", **options )
p1.vbar(x= 'Region', top= 'Killed' , width=5,  fill_alpha=1,source=source) #, legend="MPG 1 stddev")
p1.xaxis.major_label_orientation = pi/2
p1.x_range.factor_padding = 5
p1.yaxis.formatter=NumeralTickFormatter(format="00")
set_stype(p1,  xlabel="Region", ylabel ="Killed")

p2 = figure(x_range= df_region_wise.index.tolist(),title="Wounded By Regions", **options)
p2.vbar(x= 'Region', top='Wounded' , width=5, fill_alpha=1, color='green',source =source)  #, legend="MPG 1 stddev")
p2.xaxis.major_label_orientation = pi/2
p2.x_range.factor_padding = 5
p2.yaxis.formatter=NumeralTickFormatter(format="00")
set_stype(p2,  xlabel="Region", ylabel ="Wounded")


p3 = figure(x_range= df_region_wise.index.tolist(),title="Casualties By Region", **options)
p3.vbar(x= 'Region', top='casualities' , width=5, fill_alpha=1, color='firebrick',source=source) #, legend="MPG 1 stddev")
p3.xaxis.major_label_orientation = pi/2
p3.x_range.factor_padding = 5
p3.yaxis.formatter=NumeralTickFormatter(format="00")
set_stype(p3,  xlabel="Region", ylabel ="Casualities")


p = gridplot([[ p1, p2, p3]], toolbar_location="left")


show(p)

#get number of attacks by years and regions

df_trend = df_gtd.groupby(['Region','Year']).size().reset_index().rename(columns={0:'count'})

regions =df_trend.Region.unique() 
regions

years= df_trend.Year.unique()
years

df_trend.head()

from bokeh.plotting import figure,  show
# select a palette
from bokeh.palettes import Category20 as palette
# itertools handles the cycling
import itertools  
import random
from random import randint
#output_file("patch.html")

p = figure(plot_width=800, plot_height=800, title ='Attack Counts By Region')
#colors = colorsk(len(regions))#list(np.random.choice(range(256), size=len(regions)))

colors = ['#440154', '#404387', '#29788E', '#22A784', '#79D151', '#FD0724','#37AB65', '#7C60A8', '#CF95D7', '#F6CC1D','#3DF735', '#AD6D70']
color_id =0
for reg in regions:
    
    years = df_trend.loc[df_trend.Region == reg ,'Year']
    counts = df_trend.loc[df_trend.Region == reg ,'count']
    p.line( years,counts ,color= colors[color_id] , alpha=0.8, line_width=4,legend=reg ) 
    
    color_id = color_id + 1

p.legend.location = "top_left"
p.legend.click_policy="hide"
#set_stype(p3,  xlabel="Region", ylabel ="Casualities")

set_stype(p,  xlabel="Year", ylabel ="Attack Counts")
#export_png(p, filename="./Attack Counts By Region.png")
show(p)